{
  "name": "IAP - Data Manipulation",
  "webName": "IAP Data Manipulation Transformations",
  "type": "Transformation Project",
  "vendor": "Itential",
  "product": "IAP",
  "method": "",
  "osVersions": [],
  "apiVersions": [],
  "iapVersions": [
    "2023.1"
  ],
  "domains": [],
  "tags": [],
  "useCases": [],
  "deprecated": {
    "isDeprecated": false
  },
  "brokerSince": "",
  "documentation": {
    "storeLink": "",
    "repoLink": "https://gitlab.com/itentialopensource/pre-built-automations/iap-data-manipulation",
    "npmLink": "https://www.npmjs.com/package/@itentialopensource/iap-data-manipulation",
    "docLink": "",
    "demoLinks": [
      {
        "title": "IAP JSON Schema Transformation (JST) Designer ",
        "link": "https://docs.itential.com/docs/jst-designer-2023-1"
      },
      {
        "title": "Using Transformations in IAP Workflows",
        "link": "https://docs.itential.com/docs/transformation-options-4"
      }
    ],
    "trainingLinks": [
      {
        "title": "Itential Academy",
        "link": "https://www.itential.com/itential-academy/"
      }
    ],
    "faqLink": "",
    "contributeLink": "",
    "issueLink": "",
    "webLink": "",
    "vendorLink": "https://www.itential.com/",
    "productLink": "",
    "apiLinks": []
  },
  "assets": [
    {
      "name": "Aggregate Functions for Arrays - IAP",
      "webName": "Aggregate Functions for Arrays - IAP",
      "assetType": "Transformation",
      "overview": "Run a set of mathematical aggregate functions on an array of numbers",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"groupedArray\": [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}",
      "exampleOutput": "{\r\n  \"sum\": 6,\r\n  \"maximum\": 3,\r\n  \"minimum\": 1,\r\n  \"range\": 2,\r\n  \"count\": 3,\r\n  \"arithmeticMean\": 2,\r\n  \"geometricMean\": 1.8171205928321397,\r\n  \"product\": 6,\r\n  \"harmonicMean\": 1.6363636363636365,\r\n  \"median\": 2,\r\n  \"mode\": [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  \"modeFrequency\": 1,\r\n  \"standardDeviation\": 0.816496580927726,\r\n  \"variance\": 0.6666666666666666,\r\n  \"valuesIgnored\": [],\r\n  \"valuesUsed\": [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  \"valuesUsed-converted\": [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}"
    },
    {
      "name": "Allocate a Pair of Numbers - IAP",
      "webName": "Allocate a Pair of Numbers - IAP",
      "assetType": "Transformation",
      "overview": "Find the first available consecutive pair of numbers from an array of already allocated integers given a starting integer and an ending integer",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"allocated\": [\r\n    1,\r\n    4,\r\n    5\r\n  ],\r\n  \"startRange\": 5,\r\n  \"endRange\": 8\r\n}",
      "exampleOutput": "{\r\n  \"assigned\": [\r\n    6,\r\n    7\r\n  ]\r\n}"
    },
    {
      "name": "Allocate One Number - IAP",
      "webName": "Allocate One Number - IAP",
      "assetType": "Transformation",
      "overview": "Find the first available number from an array of already allocated integers given a starting integer and an ending integer",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"allocated\": [\r\n    1,\r\n    4,\r\n    5\r\n  ],\r\n  \"startRange\": 5,\r\n  \"endRange\": 8\r\n}",
      "exampleOutput": "{\r\n  \"assigned\": 6\r\n}"
    },
    {
      "name": "Chunk Array - IAP",
      "webName": "Chunk Array - IAP",
      "assetType": "Transformation",
      "overview": "Split an array into a smaller sized groups given a desired chunk size",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"originalArray\": [\r\n    1,\r\n    2,\r\n    3,\r\n    \"a\",\r\n    \"b\"\r\n  ],\r\n  \"chunkSize\": 3\r\n}",
      "exampleOutput": "[\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  [\r\n    \"a\",\r\n    \"b\"\r\n  ]\r\n]"
    },
    {
      "name": "Clear Empty Keys - IAP",
      "webName": "Clear Empty Keys - IAP",
      "assetType": "Transformation",
      "overview": "Clear empty keys from a JSON",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"input\": {\r\n    \"name\": \"John\",\r\n    \"age\": \"30\",\r\n    \"address\": {},\r\n    \"hobbies\": []\r\n  }\r\n}",
      "exampleOutput": "{\r\n  \"name\": \"John\",\r\n  \"age\": \"30\"\r\n}"
    },
    {
      "name": "Convert CSV to JSON - IAP",
      "webName": "Convert CSV to JSON - IAP",
      "assetType": "Transformation",
      "overview": "Convert CSV into JSON",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"csv\": \"a,b,c,d,e,f\\n1,2,3,4,5,7,8,9,0\\n5,4,3,2,1\\n1,2,3,4,5\"\r\n}",
      "exampleOutput": "[\r\n  {\r\n    \"a\": \"1\",\r\n    \"b\": \"2\",\r\n    \"c\": \"3\",\r\n    \"d\": \"4\",\r\n    \"e\": \"5\",\r\n    \"f\": \"7\"\r\n  },\r\n  {\r\n    \"a\": \"5\",\r\n    \"b\": \"4\",\r\n    \"c\": \"3\",\r\n    \"d\": \"2\",\r\n    \"e\": \"1\",\r\n    \"f\": \"\"\r\n  },\r\n  {\r\n    \"a\": \"1\",\r\n    \"b\": \"2\",\r\n    \"c\": \"3\",\r\n    \"d\": \"4\",\r\n    \"e\": \"5\",\r\n    \"f\": \"\"\r\n  }\r\n]"
    },
    {
      "name": "Convert String to Special Cases - IAP",
      "webName": "Convert String to Special Cases - IAP",
      "assetType": "Transformation",
      "overview": "Convert string to special cases including camelCase, PascalCase, kebab-case, and snake_case",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"incomingString\": \"foo bar foobar\"\r\n}",
      "exampleOutput": "{\r\n  \"toCamelCase\": \"fooBarFoobar\",\r\n  \"toSnakeCase\": \"foo_bar_foobar\",\r\n  \"toKebabCase\": \"foo-bar-foobar\",\r\n  \"toPascalCase\": \"FooBarFoobar\"\r\n}"
    },
    {
      "name": "Filter Array of Objects by Key Value Pair - IAP",
      "webName": "Filter Array of Objects by Key Value Pair - IAP",
      "assetType": "Transformation",
      "overview": "Filter array of objects by key value pair",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"filterableArray\": [\r\n    {\r\n      \"city\": \"Atlanta\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Sandy Springs\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ],\r\n  \"keyToFilterOn\": \"state\",\r\n  \"valueToFind\": \"GA\",\r\n  \"discardMatching\": true\r\n}",
      "exampleOutput": "{\r\n  \"filteredArray\": [\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ],\r\n  \"firstFilteredElement\": {\r\n    \"city\": \"Dallas\",\r\n    \"state\": \"TX\"\r\n  }\r\n}"
    },
    {
      "name": "Generate Random Integer Within Range - IAP",
      "webName": "Generate Random Integer Within Range - IAP",
      "assetType": "Transformation",
      "overview": "Generate a random integer within a range",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"minimum\": 2,\r\n  \"maximum\": 5\r\n}",
      "exampleOutput": "2"
    },
    {
      "name": "Get Random Element From Array - IAP",
      "webName": "Get Random Element From Array - IAP",
      "assetType": "Transformation",
      "overview": "Get a random element from array",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    {\r\n      \"city\": \"Atlanta\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Sandy Springs\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ]\r\n}",
      "exampleOutput": "{\r\n  \"arrayWithoutElement\": [\r\n    {\r\n      \"city\": \"Sandy Springs\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ],\r\n  \"randomElement\": {\r\n    \"city\": \"Atlanta\",\r\n    \"state\": \"GA\"\r\n  },\r\n  \"randomElementIndex\": 0,\r\n  \"poppedArrayLength\": 3\r\n}"
    },
    {
      "name": "Get Value From JSON Pointer - IAP",
      "webName": "Get Value From JSON Pointer - IAP",
      "assetType": "Transformation",
      "overview": "Get a value from an object using JSON Pointer",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"jsonPointer\": \"/a/b\",\r\n  \"obj\": {\r\n    \"a\": {\r\n      \"b\": 2,\r\n      \"c\": 3\r\n    }\r\n  }\r\n}",
      "exampleOutput": "2"
    },
    {
      "name": "Group Records by Property - IAP",
      "webName": "Group Records by Property - IAP",
      "assetType": "Transformation",
      "overview": "Group records by a property",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    {\r\n      \"fruit\": \"apple\",\r\n      \"price\": \"42.2\",\r\n      \"type\": \"fruit\"\r\n    },\r\n    {\r\n      \"fruit\": \"banana\",\r\n      \"price\": \"10.1\",\r\n      \"type\": \"fruit\"\r\n    },\r\n    {\r\n      \"fruit\": \"potato\",\r\n      \"price\": \"20\",\r\n      \"type\": \"vegetable\"\r\n    }\r\n  ],\r\n  \"groupByProperty\": \"type\"\r\n}",
      "exampleOutput": "{\r\n  \"fruit\": [\r\n    {\r\n      \"fruit\": \"apple\",\r\n      \"price\": \"42.2\",\r\n      \"type\": \"fruit\"\r\n    },\r\n    {\r\n      \"fruit\": \"banana\",\r\n      \"price\": \"10.1\",\r\n      \"type\": \"fruit\"\r\n    }\r\n  ],\r\n  \"vegetable\": [\r\n    {\r\n      \"fruit\": \"potato\",\r\n      \"price\": \"20\",\r\n      \"type\": \"vegetable\"\r\n    }\r\n  ]\r\n}"
    },
    {
      "name": "Parse Number - IAP",
      "webName": "Parse Number - IAP",
      "assetType": "Transformation",
      "overview": "Convert strings and strings within objects to numbers",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"keysToConvert\": [\r\n    \"price\",\r\n    \"aisle\"\r\n  ],\r\n  \"data\": {\r\n    \"fruit\": \"apple\",\r\n    \"quantity\": \"30\",\r\n    \"price\": \"42.2\",\r\n    \"aisle\": \"23b\"\r\n  }\r\n}",
      "exampleOutput": "{\r\n  \"fruit\": \"apple\",\r\n  \"quantity\": \"30\",\r\n  \"price\": 42.2,\r\n  \"aisle\": \"23b\"\r\n}"
    },
    {
      "name": "Remove Duplicates From Array of Arrays or Objects - IAP",
      "webName": "Remove Duplicates From Array of Arrays or Objects - IAP",
      "assetType": "Transformation",
      "overview": "Remove duplicates from an array of objects or array of arrays",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    {\r\n      \"a\": \"a\"\r\n    },\r\n    {\r\n      \"a\": \"b\"\r\n    },\r\n    {\r\n      \"a\": \"a\"\r\n    },\r\n    {\r\n      \"a\": {\r\n        \"a\": [\r\n          1,\r\n          2,\r\n          3\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"a\": {\r\n        \"a\": [\r\n          1,\r\n          2,\r\n          3\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}",
      "exampleOutput": "[\r\n  {\r\n    \"a\": \"a\"\r\n  },\r\n  {\r\n    \"a\": \"b\"\r\n  },\r\n  {\r\n    \"a\": {\r\n      \"a\": [\r\n        1,\r\n        2,\r\n        3\r\n      ]\r\n    }\r\n  }\r\n]"
    },
    {
      "name": "Remove Duplicates From Array of Primitives - IAP",
      "webName": "Remove Duplicates From Array of Primitives - IAP",
      "assetType": "Transformation",
      "overview": "Remove duplicates from an array of primitives",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    \"hello\",\r\n    \"world\",\r\n    \"hello\",\r\n    null,\r\n    true,\r\n    true,\r\n    null,\r\n    \"world\",\r\n    \"HeLLo\"\r\n  ]\r\n}",
      "exampleOutput": "[\r\n  \"hello\",\r\n  \"world\",\r\n  null,\r\n  true,\r\n  \"HeLLo\"\r\n]"
    },
    {
      "name": "Remove Element From Array by Index - IAP",
      "webName": "Remove Element From Array by Index - IAP",
      "assetType": "Transformation",
      "overview": "Remove an element from an array by index",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    9,\r\n    8,\r\n    7.45,\r\n    77,\r\n    7\r\n  ],\r\n  \"index\": 1\r\n}",
      "exampleOutput": "{\r\n  \"newArray\": [\r\n    9,\r\n    7.45,\r\n    77,\r\n    7\r\n  ],\r\n  \"item\": 8\r\n}"
    },
    {
      "name": "Remove Element From Array by Value - IAP",
      "webName": "Remove Element From Array by Value - IAP",
      "assetType": "Transformation",
      "overview": "Remove an element from an array by a value",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    7,\r\n    9,\r\n    8,\r\n    7.45,\r\n    77,\r\n    7\r\n  ],\r\n  \"value\": 7,\r\n  \"removeAll\": true\r\n}",
      "exampleOutput": "{\r\n  \"newArray\": [\r\n    9,\r\n    8,\r\n    7.45,\r\n    77\r\n  ],\r\n  \"noOfRemovedItems\": 2\r\n}"
    },
    {
      "name": "Separate Array of Objects by Key Value Pair - IAP",
      "webName": "Separate Array of Objects by Key Value Pair - IAP",
      "assetType": "Transformation",
      "overview": "Separate an array of objects by a key value pair",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"dataArray\": [\r\n    {\r\n      \"city\": \"Atlanta\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Sandy Springs\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ],\r\n  \"key\": \"state\",\r\n  \"value\": \"GA\"\r\n}",
      "exampleOutput": "{\r\n  \"matchingItems\": [\r\n    {\r\n      \"city\": \"Atlanta\",\r\n      \"state\": \"GA\"\r\n    },\r\n    {\r\n      \"city\": \"Sandy Springs\",\r\n      \"state\": \"GA\"\r\n    }\r\n  ],\r\n  \"nonmatchingItems\": [\r\n    {\r\n      \"city\": \"Dallas\",\r\n      \"state\": \"TX\"\r\n    },\r\n    {\r\n      \"city\": \"Orlando\",\r\n      \"state\": \"FL\"\r\n    }\r\n  ]\r\n}"
    },
    {
      "name": "Split String into Array by Regex or Separator - IAP",
      "webName": "Split String into Array by Regex or Separator - IAP",
      "assetType": "Transformation",
      "overview": "Split a string into an array by regex or another string",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"inputString\": \"Hello123world-456,2024\",\r\n  \"separatorString\": \"\",\r\n  \"separatorRegex\": \"/\\d+/gm\",\r\n  \"limit\": null\r\n}",
      "exampleOutput": "[\r\n  \"Hello\",\r\n  \"world-\",\r\n  \",\",\r\n  \"\"\r\n]"
    },
    {
      "name": "Transpose Record by Creating Arrays for Each Property Within Groups - IAP",
      "webName": "Transpose Record by Creating Arrays for Each Property Within Groups - IAP",
      "assetType": "Transformation",
      "overview": "Transpose the record by creating arrays for each property within the groups",
      "iapVersions": [
        "2023.1"
      ],
      "exampleInput": "{\r\n  \"array\": [\r\n    {\r\n      \"item\": \"apple\",\r\n      \"price\": \"42.2\",\r\n      \"type\": \"fruit\"\r\n    },\r\n    {\r\n      \"item\": \"banana\",\r\n      \"price\": \"10.1\",\r\n      \"type\": \"fruit\"\r\n    },\r\n    {\r\n      \"item\": \"potato\",\r\n      \"price\": \"20\",\r\n      \"type\": \"vegetable\"\r\n    }\r\n  ],\r\n  \"groupByProperty\": \"type\"\r\n}",
      "exampleOutput": "{\r\n  \"fruit\": {\r\n    \"item\": [\r\n      \"apple\",\r\n      \"banana\"\r\n    ],\r\n    \"price\": [\r\n      \"42.2\",\r\n      \"10.1\"\r\n    ]\r\n  },\r\n  \"vegetable\": {\r\n    \"item\": [\r\n      \"potato\"\r\n    ],\r\n    \"price\": [\r\n      \"20\"\r\n    ]\r\n  }\r\n}"
    }
  ],
  "relatedItems": {
    "adapters": [],
    "integrations": [],
    "ecosystemApplications": [],
    "workflowProjects": [],
    "transformationProjects": [],
    "exampleProjects": []
  }
}